<start-message>: |
  ^^^^^^^__                  ___           _____
        / /___ __   ______ _/ (_)___      / ___/
   __  / / __ `/ | / / __ `/ / / __ \    / __ \
  / /_/ / /_/ /| |/ / /_/ / / / / / /   / /_/ /
  \____/\__,_/ |___/\__,_/_/_/_/ /_/    \____/

       https://javalin.io/documentation

package: pac-man
lang: "language : <input-choice>"
<choice>:lang:java:
  title: Java (from oracle)
  language: java
  suffix: ""
  fileSuffix: java
  arg: -java

<choice>:lang:kotlin:
  title: Kotlin (from jetbrains)
  language: kotlin
  suffix: Kt
  fileSuffix: kt
  arg: -kt

<jpm-init>: "{{package}} {{lang[arg]}}"
<template-init>:
  - out/:
  - .env: PORT=7000
  - package.yml: |
      main: {{package.under}}.{{package.under.title}}{{lang[suffix]}}
      package: {{package}}
      version: 0.0.0
      language: {{lang[language]}}
      env: .env
      scripts:
        serve: jpm build && jpm run
        build: cp -rf public out/public && jpm compile
        dev: jpm run -hot "(jpm_app/**|public/**)" "cp -rf public out/public"
        clean: rm -rf out/* dist
        # overrides the default 'jpm install' command
        install@: |
          curl -o public/logo.svg https://javalin.io/img/logo.svg 
          jpm install
      dependencies:
        - mvn org.slf4j slf4j-simple:latest
        - mvn io.javalin javalin:latest
        {{if-eq lang[language] kotlin -> - mvn org.jetbrains.kotlin kotlin-test:latest test}}
      repos:
        - mvn: https://repo1.maven.org/maven2/
  - public/index.html: |
      <!DOCTYPE html>
      <html lang="en">
      <head>
        <meta charset="UTF-8">
        <title>JPM Javalin server</title>
        <link rel="stylesheet" href="/index.css">
      </head>
      <body>
        <div class="card">
          <h1>JPM Javalin server</h1>
          <a href="https://javalin.io" target="_blank" rel="noopener">
            <img src="/logo.svg" alt="Logo" class="logo">
          </a>
          <form class="input-group" id="printForm" autocomplete="off">
            <input type="text" id="printInput" placeholder="Type something..." required>
            <button type="submit">Go</button>
          </form>
        </div>
        <script>
          document.getElementById('printForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const value = document.getElementById('printInput').value.trim();
            if (value) {window.location.href = '/print/' + encodeURIComponent(value);}
          });
        </script>
      </body>
      </html>
  - public/index.css: |
      body {
        margin: 0;
        height: 100vh;
        background: #1de9b6;
        display: flex;
        align-items: center;
        justify-content: center;
        font-family: Arial, sans-serif;
      }
      .card {
        background: #fff;
        padding: 2rem 2.5rem;
        border-radius: 16px;
        box-shadow: 0 4px 24px rgba(0, 0, 0, 0.12);
        display: flex;
        flex-direction: column;
        align-items: center;
        min-width: 320px;
      }
      .card h1 {
        margin: 0 0 1.2rem 0;
        font-size: 1.7rem;
        color: #009688;
        letter-spacing: 1px;
      }
      .card img.logo {
        display: block;
        margin-bottom: 0.2rem;
        width: 140px;
        height: 48px;
        object-fit: contain;
      }
      .input-group {
        width: 100%;
        display: flex;
        gap: 0.5rem;
      }
      .input-group input[type="text"] {
        flex: 1;
        padding: 0.5rem 0.75rem;
        border: 1px solid #b2dfdb;
        border-radius: 6px;
        font-size: 1rem;
        outline: none;
        transition: border 0.2s;
      }
      .input-group input[type="text"]:focus {
        border-color: #26c6da;
      }
      .input-group button {
        padding: 0.5rem 1rem;
        background: #1de9b6;
        color: #fff;
        border: none;
        border-radius: 6px;
        font-size: 1rem;
        cursor: pointer;
        transition: background 0.2s;
      }
      .input-group button:hover {
        background: #00bfae;
      }
template-java:
  - "{{package.under}}/{{package.under.title}}.{{lang[fileSuffix]}}": |
      package {{package.under}};
      import io.javalin.Javalin;
      import io.javalin.http.Handler;
      import io.javalin.http.staticfiles.Location;
      public class {{package.under.title}} {
          public static void main(String[] args) {
              Javalin app = Javalin.create(config -> {
                  config.staticFiles.add(staticFiles -> {
                      staticFiles.hostedPath = "/";
                      staticFiles.directory = "/public";
                      staticFiles.location = Location.CLASSPATH;
                  });
              });
              app.get("/", indexHandler);
              app.get("/print/{data}", printHandler);
              int port = (System.getenv("PORT") == null)? 7000 :Integer.parseInt(System.getenv("PORT"));
              app.start(port);
          }
          private static Handler indexHandler = ctx -> ctx.redirect("/index.html");
          private static Handler printHandler = ctx -> {
              String data = ctx.pathParam("data");
              ctx.result("Received data: " + data);
          };
      }

  - "tests/Test{{package.under.title}}.{{lang[fileSuffix]}}": |
      package tests;
      import org.junit.Test;
      import org.junit.*;
      import {{package.under}}.{{package.under.title}};
      public class Test{{package.under.title}} {
          @Test
          public void testApp() {
              Assert.assertTrue(true);
          }
      }

template-kotlin:
  - "{{package.under}}/{{package.under.title}}.{{lang[fileSuffix]}}": |
      package {{package.under}}
      import io.javalin.*
      import io.javalin.http.Handler
      import io.javalin.http.staticfiles.Location
      fun main(args: Array<String>) {
          val app = Javalin.create { config -> config.staticFiles.add { staticFiles ->
                  staticFiles.hostedPath = "/"
                  staticFiles.directory = "/public"              
                  staticFiles.location = Location.CLASSPATH
              }
          }
          app.get("/", indexHandler)
          app.get("/print/{data}", printHandler)
          app.start(System.getenv("PORT")?.toInt() ?: 7000)
      }
      val indexHandler: Handler = Handler { ctx -> ctx.redirect("/index.html")}
      val printHandler: Handler = Handler { ctx ->
          val data = ctx.pathParam("data")
          ctx.result("Received data: $data")
      }

  - "tests/Test{{package.under.title}}.{{lang[fileSuffix]}}": |
      package tests
      import org.junit.*
      import kotlin.test.*
      import {{package.under}}.*

      class TestJpm {
          @Test
          fun testApp() {
              assertNotNull(indexHandler)
              assertNotNull(printHandler)
          }
      }
<templating>: template-{{lang[language]}}
<finish-message>: |
  Your Javalin app is ready ðŸš€
  To get started, run:

      jpm install
      jpm serve
  
  Then open http://localhost:7000 in your browser.ðŸŒŽ
