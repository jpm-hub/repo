<start-message>: |
  ^_____         _               
  |   | |___ _ _| |_ ___ ___ ___ 
  | | | | -_| | |  _|  _| . |   |
  |_|___|___|___|_| |_| |___|_|_|



package: "package name : <input-text-sanitized>"
lang: "language : <input-choice>"
<choice>:lang:java:
  title: Java (from oracle)
  language: java
  suffix: ""
  fileSuffix: java
  arg: -java

<choice>:lang:kotlin:
  title: Kotlin (from jetbrains)
  language: kotlin
  suffix: Kt
  fileSuffix: kt
  arg: -kt

<jpm-init>: jpm init {{package}} {{lang[arg]}}
<template-init>:
  - package.yml: |
      main: {{package.snake}}.{{package.camel}}{{lang[suffix]}}
      package: {{package}}
      version: 0.0.0
      language: {{lang[language]}}
      scripts:
        start: jpm compile && jpm run
        compile@: jpm compile && jpm cp
        cp: cp -r resources/* out/
        clean: rm -rf out/* dist 
        dev: jpm compile && jpm run -hot "(resources/**|{{package.snake}}/*)" "jpm start"
        install@: jpm install:{\{jpm.OS-ARCH}\} ...args@
        install:windows-amd64: JFX=win jpm install ...args@
        install:darwin-amd64: JFX=mac jpm install ...args@
        install:darwin-arm64: JFX=mac-aarch64 jpm install ...args@
        install:linux-amd64: JFX=linux jpm install ...args@
      dependencies:
        - neutron
      classifiers:
        org.openjfx: '{\{ ENV.JFX }\}'
      repos:
        - default: https://repo1.maven.org/maven2/
      args:
        java: --add-modules javafx.controls,javafx.graphics,javafx.web
  - resources/ui/index.html: |
      <!DOCTYPE html>
      <html lang="en">
        <head>
          <meta charset="UTF-8" />
          <title>Neutron Desktop Apps</title>
          <style>
            body {
              font-family: Arial;
              background: #ffffff;
              margin: 0;
              padding: 0;
              min-height: 100vh;
              display: flex;
              flex-direction: column;
              align-items: center;
              justify-content: center;
              overflow: hidden;
              user-select: none;
              -webkit-user-select: none;
              cursor: default;
            }
            .container {
              background: #fff;
              padding: 2rem 2.5rem;
              border-radius: 14px;
              box-shadow: 0 8px 32px rgba(45, 108, 223, 0.12),
                0 1.5px 6px rgba(0, 0, 0, 0.04);
              text-align: center;
              max-width: 400px;
              border: 1.5px solid #eaf3ff;
            }
            .logo {
              width: 56px;
              height: 56px;
              margin-bottom: 1rem;
              border-radius: 50%;
              display: flex;
              align-items: center;
              justify-content: center;
              box-shadow: 0 2px 12px rgba(45, 108, 223, 0.15);
              background: linear-gradient(225deg, #2d6cdf 50%, #c1f0ff 100%);
              z-index: -1;
              animation: rotateBg 4s cubic-bezier(0.39, 0.15, 0.36, 0.85) infinite;
            }
            @keyframes rotateBg {
              from {
                transform: rotate(0deg);
              }
              to {
                transform: rotate(360deg);
              }
            }
            .logo svg {
              width: 32px;
              height: 32px;
              fill: #fff;
            }
            h1 {
              color: #2d6cdf;
              font-size: 1.7rem;
              font-weight: 700;
              margin-bottom: 0.5rem;
              letter-spacing: -1px;
            }
            .desc {
              color: #333;
              font-size: 1.05rem;
              font-weight: 500;
              margin-bottom: 1.1rem;
            }
            .cta-btn {
              font: 1em Arial, sans-serif;
              display: inline-block;
              padding: 0.6em 1.6em;
              font-weight: bold;
              color: #fff;
              background: linear-gradient(90deg, #2d6cdf, #5ad6ff);
              background-size: 200% 100%; /* allow animation space */
              background-position: 0% 50%;
              border: none;
              border-radius: 6px;
              box-shadow: 0 2px 8px rgba(45, 108, 223, 0.13);
              cursor: pointer;
              transition: transform 0.2s, background-position 0.5s;
            }

            .cta-btn:hover {
              animation: button-hover 0.5s linear forwards;
              transform: translateY(-2px) scale(1.03);
            }

            @keyframes button-hover {
              0% {
                background-position: 0% 50%;
              }
              100% {
                background-position: 100% 50%;
              }
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div id="logo" class="logo">
              <svg viewBox="0 0 48 48">
                <circle cx="24" cy="24" r="20" />
                <path
                  d="M24 12v24M12 24h24"
                  stroke="#fff"
                  stroke-width="3"
                  stroke-linecap="round"
                  fill="none"
                />
              </svg>
            </div>
            <h1>Neutron</h1>
            <div class="desc">Native desktop apps with web tech</div>
            <p class="desc" id="rpl"></p>
            <button class="cta-btn" id="longClickBtn">Click Me</button>
          </div>
          <script>
            window.addEventListener("neutron-ready", () => {
              console.log("Neutron UI Loaded 🚀");
              window.java.setDraggable("logo");
            });
            
            // Long click logic
            const btn = document.getElementById("longClickBtn");
            let longClickTimer;
            const LONG_CLICK_DURATION = 600; // ms
            
            btn.addEventListener("mousedown", () => {
              longClickTimer = setTimeout(() => {
                alert("Long Click Detected!");
              }, LONG_CLICK_DURATION);
              console.log("try to drag the neutron logo 😊");
            });

            btn.addEventListener("mouseup", () => {
              clearTimeout(longClickTimer);
              console.log("try long click the button 🎈");
            });

            btn.addEventListener("mouseleave", () => {
              clearTimeout(longClickTimer);
            });
          </script>
        </body>
      </html>


template-java:
  - "{{package.snake}}/{{package.camel}}.java": |
      package {{package.snake}};
      import neutron.Neutron;
      public class {{package.camel}} {
        public static void main(String[] args) {
          Neutron.launch();
        }
      }
  - "tests/Test{{package.camel}}.java": |
      package tests;
      import org.junit.*;
      public class Test{{package.camel}} {
          @Test
          public void test() {
            Assert.assertEquals(true, true);
          }
      }
template-kotlin:
  - "{{package.snake}}/{{package.camel}}.kt": |
      package {{package.snake}};
      import neutron.Neutron;
      fun main(args: Array<String>) {
          Neutron.launch();
      }
  - "tests/Test{{package.camel}}.kt": |
      package tests
      import org.junit.Test
      import org.junit.Assert
      class Test{{package.camel}} {
          @Test
          fun test() {
              Assert.assertEquals(true, true)
          }
      }

<templating>: template-{{lang[language]}}
<finish-message>: |
  ┌───────────────────────────────────────────────┐
  │ Your app is ready 🚀                          │
  │ To get started, run:                          │
  │                                               │
  │   📦  jpm install                             │
  │   📺  jpm start                               │
  └───────────────────────────────────────────────┘
